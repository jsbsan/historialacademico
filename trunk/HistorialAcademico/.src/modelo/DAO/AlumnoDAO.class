' Gambas class file
PUBLIC FUNCTION Total() AS integer 
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
    SQLString  = "SELECT RutaFoto FROM Alumno" 
try    mRs = conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Intentar obtener lista")
  return -1 
endif 
RETURN val(Str$(mRs.Count)) 
End 

PUBLIC function registrar( NuevaAlumno as AlumnoVO) as boolean
  Dim conectar as new conexion
  Dim SQLString As String
   conectar.Conexion()
SQLString = "INSERT INTO Alumno(RutaFoto,idAlumno,Apellido,Nombre,Documento,FechaNacimiento,Domicilio,Telefono,Nacionalidad,EscOrigen,Legajo) Values ("
SQLString &= "'" & NuevaAlumno.RutaFoto & "'"
SQLString &= ",Null" 
SQLString &= ",'" & NuevaAlumno.Apellido & "'"
SQLString &= ",'" & NuevaAlumno.Nombre & "'"
SQLString &= ",'" & NuevaAlumno.Documento & "'"
SqlString &=",'" & format( NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") & "'" 
SQLString &= ",'" & NuevaAlumno.Domicilio & "'"
SQLString &= ",'" & NuevaAlumno.Telefono & "'"
SQLString &= ",'" & NuevaAlumno.Nacionalidad & "'"
SQLString &= ",'" & NuevaAlumno.EscOrigen & "'"
SQLString &= ",'" & NuevaAlumno.Legajo & "')"
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Intentar insertar datos, revise ID,  " & "\nError:  "   & error.text )
  return false 
endif 
conectar.desconectar() 
 return true 
 
END  

PUBLIC FUNCTION ModificarRutaFoto(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE RutaFoto='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarIdAlumno(editado as Integer,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE idAlumno='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarApellido(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE Apellido='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarNombre(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE Nombre='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarDocumento(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE Documento='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarFechaNacimiento(editado as Date,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE FechaNacimiento='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarDomicilio(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE Domicilio='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarTelefono(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE Telefono='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarNacionalidad(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE Nacionalidad='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarEscOrigen(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', Legajo='" & NuevaAlumno.Legajo & "'" 
SQlString &= " WHERE EscOrigen='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC FUNCTION ModificarLegajo(editado as String,NuevaAlumno as AlumnoVO) as boolean
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
SQLString = "UPDATE  Alumno SET "
SQLString &= "RutaFoto='" & NuevaAlumno.RutaFoto 
SQLString &= "', idAlumno='" & NuevaAlumno.idAlumno 
SQLString &= "', Apellido='" & NuevaAlumno.Apellido 
SQLString &= "', Nombre='" & NuevaAlumno.Nombre 
SQLString &= "', Documento='" & NuevaAlumno.Documento 
SQLString &= "', FechaNacimiento='" &  format(NuevaAlumno.FechaNacimiento,"yyyy-mm-dd") 
SQLString &= "', Domicilio='" & NuevaAlumno.Domicilio 
SQLString &= "', Telefono='" & NuevaAlumno.Telefono 
SQLString &= "', Nacionalidad='" & NuevaAlumno.Nacionalidad 
SQLString &= "', EscOrigen='" & NuevaAlumno.EscOrigen & "'"
SQlString &= " WHERE Legajo='" & editado & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al Modificar datos ")
 return false
else 
conectar.desconectar() 
 return true
ENDIF 
END  

PUBLIC function BorrarRutaFoto( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE RutaFoto='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarIdAlumno( valor AS Integer ) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE idAlumno=" & str$(valor) 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarApellido( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE Apellido='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarNombre( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE Nombre='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarDocumento( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE Documento='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarFechaNacimiento( valor AS Date) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE FechaNacimiento=" & str$(valor) 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarDomicilio( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE Domicilio='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarTelefono( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE Telefono='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarNacionalidad( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE Nacionalidad='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarEscOrigen( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE EscOrigen='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BorrarLegajo( valor AS String) as boolean 
     Dim conectar as new conexion
     Dim SQLString as string
     conectar.Conexion()
sqlstring="DELETE FROM Alumno WHERE Legajo='" & valor & "'" 
Try conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
  Message.Error(" Se ha producido un ERROR al intentar Borrar datos, revise ID , " & "\nError: "   & error.text)
 return false
else
conectar.desconectar() 
 return true
ENDIF 
END

PUBLIC function BuscarContenidoRutaFoto( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE RutaFoto like '%" & valor & "%' "
else 
   SQlString &= " WHERE RutaFoto like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualRutaFoto( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE RutaFoto like '" & valor & "' "
else 
   SQlString &= " WHERE RutaFoto like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualIdAlumno( valor AS integer,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE idAlumno like '" & valor & "' "
else 
   SQlString &= " WHERE idAlumno like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarContenidoApellido( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Apellido like '%" & valor & "%' "
else 
   SQlString &= " WHERE Apellido like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualApellido( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Apellido like '" & valor & "' "
else 
   SQlString &= " WHERE Apellido like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarContenidoNombre( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Nombre like '%" & valor & "%' "
else 
   SQlString &= " WHERE Nombre like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualNombre( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Nombre like '" & valor & "' "
else 
   SQlString &= " WHERE Nombre like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarContenidoDocumento( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Documento like '%" & valor & "%' "
else 
   SQlString &= " WHERE Documento like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualDocumento( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Documento like '" & valor & "' "
else 
   SQlString &= " WHERE Documento like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualFechaNacimiento( valor AS Date,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE FechaNacimiento like '" & valor & "' "
else 
   SQlString &= " WHERE FechaNacimiento like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarMenorQueFechaNacimiento( valor AS Date,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE FechaNacimiento<" & valor 
else 
   SQlString &= " WHERE FechaNacimiento<" & valor & "   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarMayorQueFechaNacimiento( valor AS Date,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE FechaNacimiento>" & valor  
else 
   SQlString &= " WHERE FechaNacimiento>" & valor & "  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarEntreFechaNacimiento( valorMin AS Date, valorMax AS Date,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE FechaNacimiento BETWEEN " & valorMin & " And " & valorMax  
else 
   SQlString &= " WHERE FechaNacimiento BETWEEN " & valorMin & " And " & valorMax & " Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarContenidoDomicilio( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Domicilio like '%" & valor & "%' "
else 
   SQlString &= " WHERE Domicilio like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualDomicilio( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Domicilio like '" & valor & "' "
else 
   SQlString &= " WHERE Domicilio like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarContenidoTelefono( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Telefono like '%" & valor & "%' "
else 
   SQlString &= " WHERE Telefono like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualTelefono( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Telefono like '" & valor & "' "
else 
   SQlString &= " WHERE Telefono like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarContenidoNacionalidad( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Nacionalidad like '%" & valor & "%' "
else 
   SQlString &= " WHERE Nacionalidad like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualNacionalidad( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Nacionalidad like '" & valor & "' "
else 
   SQlString &= " WHERE Nacionalidad like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarContenidoEscOrigen( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE EscOrigen like '%" & valor & "%' "
else 
   SQlString &= " WHERE EscOrigen like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualEscOrigen( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE EscOrigen like '" & valor & "' "
else 
   SQlString &= " WHERE EscOrigen like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarContenidoLegajo( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Legajo like '%" & valor & "%' "
else 
   SQlString &= " WHERE Legajo like '%" & valor & "%'  Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError:  "   & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function BuscarIgualLegajo( valor AS String,optional CampoOrden as string ) as result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
SQLString="Select * From Alumno"
If CampoOrden=null then 
   SQlString &= " WHERE Legajo like '" & valor & "' "
else 
   SQlString &= " WHERE Legajo like '" & valor & "'   Order by " & CampoOrden
endif 
Try mRs=conectar.hconn.Exec(SQLString) 
IF ERROR THEN 
Message.Error(" Se ha producido un ERROR al Buscar datos, " & "\nError: " & error.text )
else 
return mRs
ENDIF 
END  

PUBLIC function sql( consulta AS string) As result
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
  conectar.Conexion()
try mRs=conectar.hconn.Exec(consulta) 
If error then message.info("Consulta erronea, revisela")
return mRs 
END 

PUBLIC Function informe() as string
 dim texto as string
print "Base de datos: CursosAlumnos"
print "        Tabla: Alumno"
print "             Campo: RutaFoto Tipo: String"
print "             Campo: idAlumno Tipo: Null"
print "             Campo: Apellido Tipo: String"
print "             Campo: Nombre Tipo: String"
print "             Campo: Documento Tipo: String"
print "             Campo: FechaNacimiento Tipo: Date"
print "             Campo: Domicilio Tipo: String"
print "             Campo: Telefono Tipo: String"
print "             Campo: Nacionalidad Tipo: String"
print "             Campo: EscOrigen Tipo: String"
print "             Campo: Legajo Tipo: String"
 texto= "Base_de_datos:|CursosAlumnos|"
 texto &= "Tabla:|Alumno"
 texto &= "|campo:|RutaFoto|tipo:|String"
 texto &= "|campo:|idAlumno|tipo:|Null"
 texto &= "|campo:|Apellido|tipo:|String"
 texto &= "|campo:|Nombre|tipo:|String"
 texto &= "|campo:|Documento|tipo:|String"
 texto &= "|campo:|FechaNacimiento|tipo:|Date"
 texto &= "|campo:|Domicilio|tipo:|String"
 texto &= "|campo:|Telefono|tipo:|String"
 texto &= "|campo:|Nacionalidad|tipo:|String"
 texto &= "|campo:|EscOrigen|tipo:|String"
 texto &= "|campo:|Legajo|tipo:|String"
 Return texto 
end

PUBLIC Function gridFormatearColumnas(grid AS GridView) as gridview
   WITH grid 
      .header = 3 
      .rows.count = 0 
      .columns.count = 11 
      .Columns[0].title = "RutaFoto"
      .Columns[0].width = 80
      .Columns[1].title = "idAlumno"
      .Columns[1].width = 80
      .Columns[2].title = "Apellido"
      .Columns[2].width = 80
      .Columns[3].title = "Nombre"
      .Columns[3].width = 80
      .Columns[4].title = "Documento"
      .Columns[4].width = 80
      .Columns[5].title = "FechaNacimiento"
      .Columns[5].width = 80
      .Columns[6].title = "Domicilio"
      .Columns[6].width = 80
      .Columns[7].title = "Telefono"
      .Columns[7].width = 80
      .Columns[8].title = "Nacionalidad"
      .Columns[8].width = 80
      .Columns[9].title = "EscOrigen"
      .Columns[9].width = 80
      .Columns[10].title = "Legajo"
      .Columns[10].width = 80
      .font.name = "Sans"
      .font.size = 10 
      .Background = 16777215 
      .Foreground = 0 
   END WITH
 Return grid 
END

PUBLIC FUNCTION gridFormatearFilas(grid AS GridView) AS gridview  
   WITH grid  
      .header = 3 
      .rows.count =11
      .columns.count = 2  
      .Columns[0].title = "Campos"  
      .Columns[1].title = "Registro"  
      .font.name = "Sans"
      .font.size = 10 
      .Background = 16777215 
      .Foreground = 0 
   END WITH
      grid[0,0].text = "RutaFoto" 
      grid[0,0].background = color.lightgray  
      grid[1,0].text = "idAlumno" 
      grid[1,0].background = color.lightgray  
      grid[2,0].text = "Apellido" 
      grid[2,0].background = color.lightgray  
      grid[3,0].text = "Nombre" 
      grid[3,0].background = color.lightgray  
      grid[4,0].text = "Documento" 
      grid[4,0].background = color.lightgray  
      grid[5,0].text = "FechaNacimiento" 
      grid[5,0].background = color.lightgray  
      grid[6,0].text = "Domicilio" 
      grid[6,0].background = color.lightgray  
      grid[7,0].text = "Telefono" 
      grid[7,0].background = color.lightgray  
      grid[8,0].text = "Nacionalidad" 
      grid[8,0].background = color.lightgray  
      grid[9,0].text = "EscOrigen" 
      grid[9,0].background = color.lightgray  
      grid[10,0].text = "Legajo" 
      grid[10,0].background = color.lightgray  
 Return grid 
END

PUBLIC SUB contenido() as result 
     Dim conectar as new conexion
     Dim SQLString as string
     Dim mRs as result
     conectar.Conexion()
     SQLString  = "SELECT * FROM Alumno" 
     try mRs = conectar.hconn.Exec(SQLString) 
If error then message.info("Consulta erronea, revisela")
RETURN mRs 
End 

PUBLIC FUNCTION mostrarRegistro(numero AS Integer, grid AS GridView, OPTIONAL sqlcadena AS String) AS Result
DIM resultado AS Result
IF sqlcadena = NULL THEN 
resultado = contenido()
ELSE 
resultado = sql(sqlcadena)
ENDIF 
resultado.MoveTo(numero)
TRY grid[0, 1].text = Str$(resultado!RutaFoto)
TRY grid[1, 1].text = Str$(resultado!idAlumno)
TRY grid[2, 1].text = Str$(resultado!Apellido)
TRY grid[3, 1].text = Str$(resultado!Nombre)
TRY grid[4, 1].text = Str$(resultado!Documento)
TRY grid[5, 1].text = Str$(resultado!FechaNacimiento)
TRY grid[6, 1].text = Str$(resultado!Domicilio)
TRY grid[7, 1].text = Str$(resultado!Telefono)
TRY grid[8, 1].text = Str$(resultado!Nacionalidad)
TRY grid[9, 1].text = Str$(resultado!EscOrigen)
TRY grid[10, 1].text = Str$(resultado!Legajo)
END

PUBLIC FUNCTION GridResultanteSQL(res AS result, grid AS GridView) AS gridview  
DIM columna AS Integer
DIM hField AS ResultField
DIM a AS Integer
DIM fila AS Integer
'defino la regilla
   WITH grid 
      .header = 3 
      .rows.count = 0 
 try     .columns.count = res.Fields.Count 
      columna = -1
       FOR EACH hField IN res.Fields
      columna = columna + 1
 try     .Columns[columna].title = Str$(hField.name)
       NEXT 
       .font.name = "Sans"
      .font.size = 10
      .Background = 16777215 
      .Foreground = 0 
   END WITH
'NO HACE FALTA:relleno los datos procedentes de la consulta en las filas...
'Grid.Rows.count = res.Count
' fila = -1
'  DO WHILE res.Available
'   INC fila
'    FOR a = 0 TO grid.columns.count - 1
'    'PRINT grid.Columns[a].title
'     grid[fila, a].text = res[grid.Columns[a].title] ' nombre 'grid.Columns[a].title]
'    NEXT 
'    res.MoveNext()
'  LOOP
 RETURN grid 
END

