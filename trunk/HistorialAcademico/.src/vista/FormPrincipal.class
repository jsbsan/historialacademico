' Gambas class file

Private resultadoAlumno As Result
Private resultadoCurso As Result

Public ControladorAplicacion As Controlador

Public Sub Form_Open()
  'formatear gridviews...
  
  Dim alu As New Alumnodao
  Dim curs As New Cursodao
  
  Me.Title = ("Historial Académico")
  TextLabelAcercaDe.text &= "<br> Version " & Application.Version
  alu.gridFormatearColumnas(GridViewAlumno)
  regillaAlumno()
  curs.gridFormatearColumnas(GridViewCurso)
  regillaCurso()
  ListBoxInforme.Add("Lista de Alumnos")
  ListBoxInforme.Add("Lista de Alumnos con los cursos que participan")
  ListBoxInforme.Add("Lista de Cursos")
  ListBoxInforme.Add("Lista de Cursos y Alumnos que lo conforman ")
  ListBoxInforme.Add("Expediente de Alumno determinado con lista de Cursos")
  ListBoxInforme.Add("Expediente de Curso determinado con lista de Alumnos")
  
  ListBoxEstadisticas.Add("El promedio de alumnos aprobados por asignatura")
  ListBoxEstadisticas.Add("El promedio de alumnos desaprobados por asignatura")
  ListBoxEstadisticas.Add("El promedio de alumnos que tienen previa una asignatura")
  ListBoxEstadisticas.Add("Promedio General de alumno en todo el año") ' (Promedio de cada asignatura y divididas en la cantidad de asignaturas)")
  ListBoxEstadisticas.Add("Cantidad de alumnos desaprobados en un año y un nivel")
  ListBoxEstadisticas.Add("Cantidad de alumnos aprobados en un año y un nivel")
  ListBoxEstadisticas.Add("Cantidad de alumnos que abandonaron el colegio en un año y nivel")
  ListBoxEstadisticas.Add("Cantidad de alumnos que tienen previas en un año y nivel")
  ListBoxEstadisticas.Add("Cuales son las asignaturas donde los alumnos les resulta mas fácil(aprobaron) por nivel")
  
  ListBoxEstadisticas.Add("Cuales son las asignaturas donde los alumnos no aprobaron por nivel")
  
  ListBoxEstadisticas.Add("Cuales son las asignaturas donde mas alumnos tienen previa por nivel")
  
  'relleno el gridview de datos...
  RefrescarDatosAlumnos()
  'relleno el gridview de datos...
  RefrescarDatosCursos()
  
End

'para el tema de dimensionado del formulario
Public Sub Form_Resize()
  
  IconPanelMenu.W = Me.w - IconPanelMenu.X
  IconPanelMenu.h = Me.H - IconPanelMenu.y - 10
  
  GridViewAlumno.w = Me.w - GridViewAlumno.X - IconPanelMenu.X - 30 - 130
  GridViewAlumno.h = Me.H - GridViewAlumno.y - IconPanelMenu.y - 10
  
  GridViewCurso.w = Me.w - GridViewcurso.X - IconPanelMenu.X - 30 - 130
  GridViewCurso.h = Me.H - GridViewCurso.y - IconPanelMenu.y - 10
  ListBoxInforme.h = Me.H - ListBoxInforme.y - IconPanelMenu.y - 10
  
End
'--------------------------------------------------------------------
'botones
'--------------------------------------------------------------------

Public Sub ToolButtonAnadir_Click()
  
  Dim nuevoalumno As New Alumnovo
  
  nuevoalumno.idAlumno = 0 'para que sea a añadir
  ControladorAplicacion.falumno.TmpAlumno = nuevoalumno
  ControladorAplicacion.falumno.showmodal()
  ControladorAplicacion.falumno.TmpAlumno = Null
  'relleno el gridview de datos...
  RefrescarDatosAlumnos()
  
End

Public Sub ToolButtonAnadirCurso_Click()
  
  Dim nuevoCurso As New CursoVO
  
  nuevoCurso.idCurso = 0
  ControladorAplicacion.fcurso.tmpcurso = nuevoCurso
  ControladorAplicacion.fcurso.showmodal()
  ControladorAplicacion.fcurso.tmpcurso = Null
  'relleno el gridview de datos...
  RefrescarDatosCursos()
  
End

Public Sub ToolButtonEditar_Click()
  
  Dim alu As New AlumnoVO
  
  If GridViewAlumno.row = -1 Then 
    'no puedo editar ya que no esta el cursor puesto en el gridvies
    Message.Info("Seleccione un alumno")
  Else
    alu = ControladorAplicacion.BuscarIdalumno(Val(GridViewAlumno[GridViewAlumno.row, 1].Text))
    ControladorAplicacion.falumno.TmpAlumno = alu
    ControladorAplicacion.falumno.TmpAlumno.idAlumno = GridViewAlumno[GridViewAlumno.row, 1].Text
    
    ControladorAplicacion.falumno.showmodal()
    ControladorAplicacion.falumno.TmpAlumno = Null
    'relleno el gridview de datos...
    RefrescarDatosAlumnos()
  Endif
  
End

Public Sub ToolButtonEditarCurso_Click()
  
  Dim cur As New CursoVO
  
  If GridViewCurso.row = -1 Then 
    Message.Info("Seleccione un curso")
  Else
    cur = ControladorAplicacion.BuscarIdCurso(Val(GridViewCurso[GridViewCurso.row, 0].Text))
    ControladorAplicacion.fcurso.TmpCurso = cur
    ControladorAplicacion.fcurso.TmpCurso.idCurso = GridViewCurso[GridViewCurso.row, 0].Text
    ControladorAplicacion.fcurso.showmodal()
    ControladorAplicacion.fcurso.TmpCurso = Null
    'relleno el gridview de datos...
    
    RefrescarDatosCursos()
  Endif  
  
End

Public Sub ToolButtonBorrar_Click()
  
  Dim valor As Integer
  
  If GridViewAlumno.row = -1 Then 
    'no puedo editar ya que no esta el cursor puesto en el gridvies
    Message.Info("Seleccione un alumno")
  Else
    valor = Message.Question("¿quieres borrar un alumno? " & gb.CrLf & "Si lo borras, borraras los datos de los cursos en que ha estado", "aceptar", "cancelar")
    If valor = 1 Then 
      If ControladorAplicacion.log.borrarIdAlumno(Val(GridViewAlumno[GridViewAlumno.row, 1].Text)) Then 
        'relleno el gridview de datos...
        RefrescarDatosAlumnos()
      Else
        Message.Info("Ha habido un problema al borrar el alumno")
      Endif
      
    Endif
    
  Endif
  
End

Public Sub ToolButtonBorrarCurso_Click()
  
  Dim valor As Integer
  
  If GridViewcurso.row = -1 Then 
    'no puedo editar ya que no esta el cursor puesto en el gridvies
    Message.Info("Seleccione un curso")
  Else
    valor = Message.Question("¿quieres borrar un curso? " & gb.CrLf & "Si lo borras, borraras los datos de los alumnos que lo han cursado", "aceptar", "cancelar")
    If valor = 1 Then 
      If ControladorAplicacion.log.borrarIdCurso(Val(GridViewCurso[GridViewCurso.row, 0].Text)) Then 
        
        'relleno el gridview de datos...
        RefrescarDatosCursos()
      Else
        Message.Info("Ha habido un problema al borrar el alumno")
      Endif
      
    Endif
    
  Endif
  
End

'------------------------------------------------------------------
'IconPanelMenu
'------------------------------------------------------------------

Public Sub IconPanelMenu_Click()
  
  Dim res As Integer
  
  Select Case IconPanelMenu.Index
    Case 3
      'lista a imprimir
      ListBoxInforme.SetFocus()
      ListBoxInforme.Index = 0
    Case 4
      'cambio de contraseña
      LabelMensajeClave.text = "mensaje:"
      TextBoxUsuarioActual.text = ""
      TextBoxClaveActual.text = ""
      TextBoxClaveNueva.text = ""
      TextBoxClaveReescrita.text = ""
    Case 7
      'salir del programa
      res = Message.Question("¿seguro que quieres salir?", "Si", "No")
      If res = 1 Then Me.Close()
      IconPanelMenu.index = 0
  End Select
  
End

'----------------------------------------------------------------------
'Zona de Administrador....
'----------------------------------------------------------------------
Public Sub ButtonCambiarClave_Click()
  
  If TextBoxClaveNueva.text = TextBoxClaveReescrita.text Then 
    
    If ControladorAplicacion.comprobarUsuarioPassword(TextBoxUsuarioActual.text, TextBoxClaveActual.text) Then 
      ControladorAplicacion.actualizarPassword(TextBoxUsuarioActual.text, TextBoxClaveNueva.text)
      LabelMensajeClave.text = "mensaje: ok se ma modificado la contraseña"
      TextBoxUsuarioActual.text = ""
      TextBoxClaveActual.text = ""
      TextBoxClaveNueva.text = ""
      TextBoxClaveReescrita.text = ""
    Else
      LabelMensajeClave.text = "mensaje: no coincide la contraseña Actual"
    Endif
    
  Else
    
    LabelMensajeClave.text = "mensaje: las clave Nueva no coincide con la Reescrita"
  Endif
  
End

Public Sub ToolButtonFichaCurso_Click()
  
  Dim cur As New CursoVO
  
  If GridViewCurso.row = -1 Then 
    'no puedo editar ya que no esta el cursor puesto en el gridvies
    Message.Info("Seleccione un curso")
  Else
    cur = ControladorAplicacion.BuscarIdCurso(Val(GridViewCurso[GridViewCurso.row, 0].Text))
    ControladorAplicacion.fExpCurso.TmpCurso = cur
    'para parsar el id del curso elegido...
    cur.idCurso = Val(GridViewCurso[GridViewCurso.row, 0].Text)
    ControladorAplicacion.fExpCurso.ShowModal()
    RefrescarDatosCursos()
  Endif
  
End

Public Sub ToolButtonExpediente_Click()
  
  Dim alu As New AlumnoVO
  Dim Alumnoelegido As New ClaseDato
  
  If GridViewAlumno.row = -1 Then 
    'no puedo editar ya que no esta el cursor puesto en el gridvies
    
    ControladorAplicacion.eligeAlumno.AlumnoElegido = Alumnoelegido
    ControladorAplicacion.eligeAlumno.showmodal()
    If Alumnoelegido.tag = "" Then
      'no ha elegido nada
      Return
      
    Else
      
      alu = ControladorAplicacion.BuscarIdalumno(Alumnoelegido.tag)
      alu.idAlumno = Alumnoelegido.tag
      ControladorAplicacion.fexpAlumno.TmpAlumno = alu
      ControladorAplicacion.fexpAlumno.ShowModal()
      RefrescarDatosAlumnos()
      
    Endif
    
  Else
    
    alu = ControladorAplicacion.BuscarIdalumno(Val(GridViewAlumno[GridViewAlumno.row, 1].Text))
    alu.idAlumno = Val(GridViewAlumno[GridViewAlumno.row, 1].Text)
    
    ControladorAplicacion.fexpAlumno.TmpAlumno = alu
    ControladorAplicacion.fexpAlumno.ShowModal()
    RefrescarDatosAlumnos()
  Endif
  
End

'-------------------------- Actualizacion datos gridview-------------------------
Public Sub GridViewAlumno_Data(row As Integer, column As Integer)
  ' este evento se encarga de dibujar los datos en el gridviews, para que aparezcan en la pantalla.
  
  Dim valorfecha As String
  
  resultadoAlumno.MoveTo(row)
  
  'la columna IdAlumno la oculto en la definicion...
  ' If column = 1 Then 
  '  'ancho de la columna IdAlumno
  '  GridViewAlumno.Columns[1].width = 0
  'Endif
  If column = 0 Then 
    If Exist(ControladorAplicacion.rutaTrabajo & "MiniFotos/Mini" & resultadoAlumno[GridViewAlumno.Columns[column].text]) Then 
      GridViewAlumno.Data.Picture = Picture.Load(ControladorAplicacion.rutaTrabajo & "MiniFotos/Mini" & resultadoAlumno[GridViewAlumno.Columns[column].text])
      Return 
    Else
      GridViewAlumno.Data.text = ""
      Return
    Endif
  Endif
  If GridViewAlumno.Columns[column].text <> "FechaNacimiento" Then 
    'no es una fecha
    GridViewAlumno.Data.text = Str(resultadoAlumno[GridViewAlumno.Columns[column].text])
  Else 
    'presentacion de fecha
    ValorFecha = resultadoAlumno[GridViewAlumno.Columns[column].text]
    GridViewAlumno.Data.text = Format(Date(Year(ValorFecha), Month(ValorFecha), Day(ValorFecha)), "dd-mmmm-yyyy")
    
  Endif
  ' colorea la fila, según sea par o impar
  If row = GridViewAlumno.row Then 
    'cursor donde esta situado en el gridview
    GridViewAlumno.Data.Background = Color.Orange
  Else
    
    If row Mod 2 = 0 Then GridViewAlumno.Data.Background = Color.LightBackground
  Endif
  
End

Public Sub RefrescarDatosAlumnos()
  
  resultadoAlumno = ControladorAplicacion.ContenidoAlumnos()
  GridViewAlumno.Rows.count = 0 'lo ponemos a cero el numero de filas
  GridViewAlumno.Rows.count = resultadoAlumno.count 'actualizamso al resultado de la consulta
  
End

Public Sub RefrescarDatosCursos()
  
  resultadoCurso = ControladorAplicacion.ContenidoCurso()
  GridViewCurso.Rows.count = 0 'lo ponemos a cero el numero de filas
  GridViewCurso.Rows.count = resultadoCurso.count 'actualizamso al resultado de la consulta
  
End

Public Sub GridViewCurso_Data(row As Integer, column As Integer)
  ' este evento se encarga de dibujar los datos en el gridviews, para que aparezcan en la pantalla.
  
  resultadoCurso.MoveTo(row)
  GridViewCurso.Data.text = Str(resultadoCurso[GridViewCurso.Columns[column].text])
  
  ' colorea la fila, según sea par o impar
  If row = GridViewCurso.row Then 
    'cursor donde esta situado en el gridview
    GridViewCurso.Data.Background = Color.Orange
  Else
    If row Mod 2 = 0 Then GridViewCurso.Data.Background = Color.Cyan
  Endif
  
End

Public Sub ToolButtonImprimirListaAlumnos_Click()
  
  Imprimir.ListaAlumnos()
  
End

Public Sub ToolButtonImprimirListaCursos_Click()
  
  Imprimir.ListaCusos()
  
End

'Anchos y alto de columnas de los gridview..

Private Sub regillaAlumno()
  
  With GridViewAlumno    
    .Columns[0].width = 40
    .Rows.Height = 40
    .Columns[1].width = 0
    .Columns[2].width = 150
    .Columns[5].width = 125
    .Columns[6].width = 250
    .font.size = 8
  End With
  
End

Private Sub regillaCurso()
  
  With GridViewCurso    
    .Columns[0].width = 0
    .Columns[1].width = 200
  End With
  
End

'-----------------------------------------------------
'Hacer doble click para ver los expedientes...
Public Sub GridViewAlumno_DblClick()
  
  ToolButtonExpediente_Click()
  
End

Public Sub GridViewCurso_DblClick()
  
  ToolButtonFichaCurso_Click()
  
End

Public Sub ListBoxInforme_Click()
  
  Debug ListBoxInforme.Index, ListBoxInforme[ListBoxInforme.index].Text
  
  Select Case ListBoxInforme.Index
    Case 0 'Lista de Alumnos
      Imprimir.ListaAlumnos()
    Case 1 'Lista de Alumnos con los cursos que participan
      imprimir.ListaAlumnosConCursosParticipal()
    Case 2 'Lista de Cursos
      Imprimir.ListaCusos()
    Case 3 ' Lista de Cursos y Alumnos que lo conforman 
      imprimir.ListaCusosConAlumnosParticipal()
    Case 4 'Expediente de Alumno determinado con lista de Cursos
      imprimir.ExpedienteDeterminadoAlumno
    Case 5 ' Expediente de Curso determinado con lista de Alumnos
      imprimir.ExpedienteDeterminadoCurso
  End Select
  
End

Public Sub ToolButtonVersion_Click()
  
  ModuleUpdate.comprobar("cursosalumnos", Application.Version, "http://controldecursosdealumnos.blogspot.com.es/2013/08/version.html")
  
End

Public Sub ToolButtonRealizarCopia_Click()
  
  Dim hpross As Process
  Dim nombre, nombreFinal As String
  'creo una copia de la carpeta ./CursoAlumnos
  nombre = "Copia" & Str$(Format(Now, "yyyy-mm-dd"))
  If Exist(User.Home & "/.CursoAlumnos/" & nombre & ".tar") Then Kill User.Home & "/.CursoAlumnos/" & nombre & ".tar"
  Shell "cd " & User.Home & "/.CursoAlumnos ; tar --exclude FotoCarnetMyWebCam.gambas -zcf " & nombre & ".tar *"
  Wait 0.5
  nombrefinal = nombre
  If Exist(User.home & "/" & nombre & ".tar") Then 
    nombreFinal = InputBox("Ponga otro nombre:", "Existe un fichero con el mismo nombre...", nombre & "(copia)")
    
  Endif
  Move User.Home & "/.CursoAlumnos/" & nombre & ".tar" To User.home & "/" & nombrefinal & ".tar"
  Message.Info("Se ha creado una copia de seguridad de los datos" & gb.CrLf & "Fichero: " & User.home & "/" & nombrefinal & ".tar")
  
End

Public Sub ToolButtonRestaurarDatos_Click()
  
  Dim nombre As String
  Dim resp As Integer
  
  resp = Message.Question("Si restaura una copia de seguridad, perderá los datos actuales", "Si, continue", "No, cancelar")
  
  If resp = 2 Then
    Debug "cancelada operacion de restaurar"
    Return
  Endif
  
  Dialog.Path = User.Home
  Dialog.Filter = ["*.tar", "tar"]
  If Dialog.OpenFile() Then 
    'no ha seleccionado nada
  Else
    Debug "Descomprimir fichero: " & Dialog.Path
    'copia el archivo al directorio 
    If Exist(User.home & "/.CursoAlumnos/" & File.Name(Dialog.Path)) Then Kill User.home & "/.CursoAlumnos/" & File.Name(Dialog.Path)
    Copy Dialog.path To User.home & "/.CursoAlumnos/" & File.Name(Dialog.Path)
    'borro ficheros y carpetas anteriores
    ModuleUtilidadesDisco.vaciarDirectorio(User.home & "/.CursoAlumnos/Fotos")
    ModuleUtilidadesDisco.vaciarDirectorio(User.home & "/.CursoAlumnos/MiniFotos")
    Kill User.home & "/.CursoAlumnos/CursosAlumnos" 'antigua base de datos
    Wait 0.5
    'extraido datos
    
    Shell "cd " & User.Home & "/.CursoAlumnos ; tar -xf '" & File.Name(Dialog.path) & "'"
    Wait 0.5
    'relleno el gridview de datos...
    RefrescarDatosAlumnos()
    RefrescarDatosCursos()
    IconPanelMenu.index = 1
    Message.Info("Restaurada la copia de datos")
    Kill User.Home & "/.CursoAlumnos/" & File.Name(Dialog.Path)
  Endif
  
End

Public Sub ToolButtonCambiarRutaInformes_Click()
  
  If Dialog.SelectDirectory() Then 
  Else
    ControladorAplicacion.rutainformes = Dialog.Path
    LabelRutaInforme.text = ControladorAplicacion.rutainformes
  Endif
  
End

Public Sub PictureBox1_MouseDown()
  
End
