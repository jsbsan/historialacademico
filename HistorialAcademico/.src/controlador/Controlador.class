' Gambas class file

Public controlAcceso As FControlAcceso
Public fprincipal As FormPrincipal
Public falumno As FormAlumno
Public fasignatura As FormAsignatura
Public fExpasignatura As FormExpedienteAsignatura
Public fexpAlumno As FormExpedienteAlumno
Public cone As Conexion
Public eligeasignatura As FormEligeasignatura
Public eligeAlumno As FormEligeAlumno
Public log As Logica

Public rutainformes As String
Public rutaTrabajo As String = main.rutaTrabajo

Private usuarioActual As String
Private passwordActual As String

Public Sub actualizarPassword(usuario As String, password As String) 
  'actualizo los datos de usuario y password
  
  Settings["Acceso/usuario"] = usuario
  Settings["Acceso/password"] = password
  
End

Public Function comprobarUsuarioPassword(Optional usuario As String, Optional password As String) As Boolean
  'leo las contrase√±as guardas
  
  usuarioActual = Settings["Acceso/usuario"]
  passwordActual = Settings["Acceso/password"]
  
  If usuarioActual = "" And passwordActual = "" Then 
    'como no hay valores pongo los de defecto
    Settings["Acceso/usuario"] = "admin"
    Settings["Acceso/password"] = "admin"
    'las leo de nuevo
    usuarioActual = Settings["Acceso/usuario"]
    passwordActual = Settings["Acceso/password"]
    
  Endif
  
  'comprobacion de usuario y password
  If usuario = usuarioActual And password = passwordActual Then 
    Return True
  Else
    Return False
  Endif
  
End

'-----------------------------------------------------------------------------
'-------------------TRABAJOS CON DATOS DE ALUMNOS-----------------------------
'-----------------------------------------------------------------------------
Public Function anadirAlumno(DatosAlumnos As AlumnoVO) As Boolean
  
  Return log.validarAnnadirAlumno(datosAlumnos)
  
End

Public Function anadirDivision(Datos As DivisionVO) As Boolean
  
  Return log.validarAnnadirDivision(datos)
  
End

Public Function anadirasignatura(Datos As AsignaturaVO) As Boolean
  
  Return log.validarAnnadirasignatura(Datos)
  
End

Public Function anadirRelacion(datos As RelacionVO) As Boolean
  
  Return log.validarAnnadirRela(datos)
  
End

Public Function anadirExpediente(datos As ExpedienteVO) As Boolean
  
  Return log.anadirExpediente(datos)
  
End

Public Function ContenidoExpediente() As Result
  
  Return log.ContenidoExpediente()
  
End

Public Function ContenidoRelacionesIdAlumnos(IdAlumno As Integer) As Result
  
  Return log.mostrarRelacionesIdAlumno(idalumno)
  
End

Public Function ContenidoRelacionesIdasignatura(Idasignatura As Integer) As Result
  
  Return log.mostrarRelacionesIdasignatura(Idasignatura)
  
End

Public Function modificarIdAlumno(datos As Alumnovo) As Boolean
  
  Return log.ModificarIdAlumno(datos)
  
End

Public Function modificarIdasignatura(datos As AsignaturaVO) As Boolean
  
  Return log.ModificarIdasignatura(datos) 
  
End

Public Function ContenidoAlumnos() As Result
  
  Return log.ContenidoAlumnosOrdenados()
  'Return log.ContenidoAlumnos()
  
End

'BUSQUEDA POR VARIOS CRITERIOS....
Public Function ContenidoDocumento(dato As String) As Result
  
  Return log.ContenidoDocumento(dato)  
  
End

Public Function ContenidoApellidos(dato As String) As Result
  
  Return log.ContenidoApellidos(dato)
  
End

Public Function ContenidoLegajo(dato As String) As Result
  'por un legajo
  
  Return log.ContenidoLegajo(dato)
  
End

'-----------------------------------------------------------
'
Public Function Contenidoasignatura() As Result
  
  Return log.ContenidoasignaturasOrdenados()
  'Return log.Contenidoasignatura()
  
End

Public Function ContenidoDivision() As Result
  
  Return log.ContenidoDivision() 
  
End

Public Function BuscarIdasignatura(id As Integer) As AsignaturaVO
  
  'si borro un asignatura tambien tengo que borrar las apariciones que haga en la tabla relaciones...
  
  Return log.BuscarIdasignatura(id)
  
End

Public Function BuscarIdalumno(id As Integer) As AlumnoVO
  
  Return log.BuscarIdalumno(id)
  
End

Public Function borrarAlumnoDeasignatura(idasignatura As Integer) As Boolean
  
  Return log.BorrarRelacionasignatura(idasignatura)
  
End

Public Function borrarAlumnoDeasignaturaIdAlumno(idalumno As Integer) As Boolean
  
  Return log.BorrarRelacionAlumno(idalumno) 
  
End

Public Function modificarIdRelacion(datos As RelacionVO) As Boolean
  
  Return log.modificarIdRelacion(datos)
  
End

Public Function BorrarIdRelacion(datos As RelacionVO) As Boolean
  
  Return log.borrarRelacionIdRela(datos)
  
End
